#include"Header.h"
#include<fstream>

int main()
{
	int size = 0;
	unsigned long long cp = 0;
	unsigned long long time = 0;
	int* selectionsort_arr;
	int* insertionsort_arr;
	int* bubblesort_arr;
	int* heapsort_arr;
	int* mergesort_arr;
	int* quicksort_arr;
	int* radixsort_arr;
	int* shakersort_arr;
	int* shellsort_arr;
	int* countingsort_arr;
	int* flashsort_arr;
	int* arr;
	for (int i = 0; i < 6; i++) {
		copyAndGenerateData(arr, size, i, 1, selectionsort_arr, insertionsort_arr, bubblesort_arr, heapsort_arr, mergesort_arr, quicksort_arr, radixsort_arr, shakersort_arr, shellsort_arr, countingsort_arr, flashsort_arr);

		// Display output

		ofstream ofs("data.txt", ios::app);
		selectionSort(selectionsort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		insertionSort(insertionsort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		bubbleSort(bubblesort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		heapSort(heapsort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		mergeSort(mergesort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		quickSort(quicksort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		radixSort(radixsort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		shakerSort(shakersort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		shellSort(shellsort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		countingSort(countingsort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		flashSort(flashsort_arr, size, time, cp);
		ofs << time << "," << cp << endl;
		ofs << endl;
		ofs.close();
	}

	deleteData(selectionsort_arr);
	deleteData(insertionsort_arr);
	deleteData(bubblesort_arr);
	deleteData(heapsort_arr);
	deleteData(mergesort_arr);
	deleteData(quicksort_arr);
	deleteData(radixsort_arr);
	deleteData(shakersort_arr);
	deleteData(shellsort_arr);
	deleteData(countingsort_arr);
	deleteData(flashsort_arr);
	deleteData(arr);
}